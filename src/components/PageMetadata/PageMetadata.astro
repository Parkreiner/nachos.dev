---
import { SITE_TITLE as titleRoot } from "../../typesConstants";

const INTERPUNCT = "\u00B7";

type Props = Readonly<{
  title: string | null;
  description: string;
  image?: string;
}>;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image } = Astro.props;

const fullTitle = Boolean(title)
  ? `${title} ${INTERPUNCT} ${titleRoot}`
  : titleRoot;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/atkinson-regular.woff"
  as="font"
  type="font/woff"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/atkinson-bold.woff"
  as="font"
  type="font/woff"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
{!!image && <meta property="og:image" content={new URL(image, Astro.url)} />}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={description} />
{
  !!image && (
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
  )
}
